**Проект: "Система управления библиотекой"**

**Описание:**

Создайте информационную систему управления библиотекой с
использованием SQL DDL. Система должна позволять осуществлять
учет книг, авторов, читателей, а также ведение журнала выдачи книг.

**Основные этапы проекта:**

1. **Проектирование базы данных:**
Начните с создания ER-диаграммы, которая отображает отношения
между сущностями "Книга", "Автор", "Читатель" и "Журнал выдачи книг".

2. **Создание базы данных:**
Используйте SQL DDL для создания базы данных. Она должна
содержать следующие таблицы:
   - Таблица "Книги": ID, Название, Год издания, ID автора.
   - Таблица "Авторы": ID, Имя, Фамилия, Год рождения.
   - Таблица "Читатели": ID, Имя, Фамилия, Контактная информация.
   - Таблица "Журнал выдачи книг": ID, ID читателя, ID книги,
     Дата выдачи, Дата возврата.

3. **Создание внешних ключей и индексов:**
Убедитесь, что все отношения между таблицами правильно заданы
с использованием внешних ключей. Также создайте индексы для
улучшения производительности запросов.

4. **Создание ограничений:**
Разработайте и примените ограничения целостности данных,
такие как CHECK, UNIQUE и NOT NULL.

**Ожидаемые результаты:**

У вас должна быть функциональная база данных,
которую можно использовать для управления библиотекой.
База данных должна быть спроектирована так, чтобы предотвратить
возможность введения некорректных данных и обеспечивать быстрый
доступ к информации.


Напишите миграционный скрипт с SQL командами,
который создаёт базу данных с нуля.

Данный скрипт должен включать в себя как минимум следующие команды:
- CREATE DATABASE;
- CREATE TABLE (+ PRIMARY KEY, FOREIGN KEY, NOT NULL);
- ALTER TABLE ADD COLUMN;
- CREATE INDEX (UNIQUE INDEX);
- CREATE VIEW;
- CREATE ROLE;
- CREATE USER;
- GRANT;

Продемонстрируйте возможности сохранения данных в созданную вами
структуру базы данных при помощи SQL скрипта с командами вставки данных.

Создайте в базе данных набор VIEW, которые помогут бизнесу с нахождением
ответом на типичные запросы и анализом данных хранящихся в базе данных.