**Проект: "Система управления университетом"**

**Описание:**

Разработайте базу данных для управления университетом.
Система должна включать информацию о студентах, преподавателях,
курсах и результатах экзаменов.

**Основные этапы проекта:**

1. **Проектирование базы данных:**
Создайте ER-диаграмму, которая отображает отношения между сущностями
"Студенты", "Преподаватели", "Курсы" и "Экзамены".

2. **Создание базы данных:**
Используйте SQL DDL для создания базы данных. Она должна содержать
следующие таблицы:
   - Таблица "Студенты": ID студента, Имя, Фамилия, Год обучения,
     Специальность.
   - Таблица "Преподаватели": ID преподавателя, Имя, Фамилия,
     Специализация.
   - Таблица "Курсы": ID курса, Название курса, ID преподавателя.
   - Таблица "Экзамены": ID экзамена, ID студента, ID курса,
     Оценка, Дата сдачи.

3. **Создание внешних ключей и индексов:**
Убедитесь, что все отношения между таблицами правильно заданы
с использованием внешних ключей. Также создайте индексы для
улучшения производительности запросов.

4. **Создание ограничений:**
Разработайте и примените ограничения целостности данных,
такие как CHECK (например, оценка может быть только в
диапазоне от 1 до 5), UNIQUE и NOT NULL.

**Ожидаемые результаты:**

В результате у вас должна быть создана база данных,
которую можно использовать для управления университетом.
База данных должна обеспечивать сохранность и целостность данных,
а также позволять быстро и эффективно искать нужную информацию.


Напишите миграционный скрипт с SQL командами,
который создаёт базу данных с нуля.

Данный скрипт должен включать в себя как минимум следующие команды:
- CREATE DATABASE;
- CREATE TABLE (+ PRIMARY KEY, FOREIGN KEY, NOT NULL);
- ALTER TABLE ADD COLUMN;
- CREATE INDEX (UNIQUE INDEX);
- CREATE VIEW;
- CREATE ROLE;
- CREATE USER;
- GRANT;

Продемонстрируйте возможности сохранения данных в созданную вами
структуру базы данных при помощи SQL скрипта с командами вставки данных.

Создайте в базе данных набор VIEW, которые помогут бизнесу с нахождением
ответом на типичные запросы и анализом данных хранящихся в базе данных.