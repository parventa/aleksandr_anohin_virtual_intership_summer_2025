Пример создания VIEW для упрощения вычислений.

Допустим, у нас есть таблицы "orders" и "order_items".

Таблица "orders" содержит информацию о заказах,
а таблица "order_items" содержит информацию о товарах в каждом заказе,
включая поля "order_id", "product_id" и "quantity".

Мы хотим создать VIEW, который будет предоставлять сумму стоимости
каждого заказа, вычисленную на основе цены и количества товаров в
каждом заказе.

Вот пример создания VIEW для упрощения вычислений с
использованием агрегатной функции SUM():
```sql
CREATE VIEW order_totals AS
SELECT o.order_id, SUM(oi.quantity * p.price) AS total_cost
FROM orders o
JOIN order_items oi ON o.order_id = oi.order_id
JOIN products p ON oi.product_id = p.product_id
GROUP BY o.order_id;
```
В этом примере мы создаем VIEW с именем "order_totals".
VIEW будет содержать идентификатор заказа и общую стоимость
каждого заказа, вычисленную путем умножения количества товаров
на цену и суммирования этих значений для каждого заказа.
Мы используем функцию SUM() для вычисления общей стоимости заказа.

Теперь мы можем выполнять запросы к этому VIEW, чтобы получить
информацию о стоимости каждого заказа:
```sql
SELECT * FROM order_totals;
```
Этот запрос вернет все записи из VIEW "order_totals",
включая информацию о заказах и общую стоимость каждого заказа.

Это более сложный пример, где объединяется несколько таблиц
и используем агрегатную функцию для вычисления общей стоимости заказа.
VIEW позволяет упростить сложные вычисления и предоставляет
удобное логическое представление данных для выполнения запросов
и упрощения работы с данными.